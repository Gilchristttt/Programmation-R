<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders+ (GlobalSuperstore)' inline='true' name='federated.1huw5pb0unamro14w52za0x5a1tz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GlobalSuperstore' name='excel-direct.02pc3rz021tzad14vr2bw0pdai8f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ouedr/OneDrive/Documents/Mon dossier Tableau/Sources de donnÃ©es/GlobalSuperstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.02pc3rz021tzad14vr2bw0pdai8f' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='City' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
              <column datatype='string' name='Country' ordinal='10' />
              <column datatype='string' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Market' ordinal='12' />
              <column datatype='string' name='Region' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.02pc3rz021tzad14vr2bw0pdai8f' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Market' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.02pc3rz021tzad14vr2bw0pdai8f' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='City' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
              <column datatype='string' name='Country' ordinal='10' />
              <column datatype='string' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Market' ordinal='12' />
              <column datatype='string' name='Region' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.02pc3rz021tzad14vr2bw0pdai8f' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Market' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market (Returns)]' value='[Returns].[Market]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X51291:no:A1:X51291:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1174:no:A1:C1174:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_3736FB5415DD4FC09382647A08AEA69C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3736FB5415DD4FC09382647A08AEA69C]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Clichy-sous-Bois&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montereau-Fault-Yonne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sceaux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aix-en-Provence&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lisieux&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rambouillet&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauguio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint-Gratien&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dijon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montreuil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Valenciennes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Conflans-Sainte-Honorine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montesson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Toulon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Caen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meyzieu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint-Herblain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;La Teste-de-Buch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Annecy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rillieux-la-Pape&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Rochelle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carquefou&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mont-de-Marsan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint-Malo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elbeuf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mulhouse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Versailles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fontaine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nanterre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Villemomble&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;La Seyne-sur-Mer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niort&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lille&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pontivy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cormeilles-en-Parisis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgeron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toulouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montauban&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sarreguemines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maisons-Alfort&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ris-Orangis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gap&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nantes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Courbevoie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montpellier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tours&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boulogne-sur-Mer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marseille&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roanne&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_3736FB5415DD4FC09382647A08AEA69C'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Order ID]' />
                    <expression op='[Returns].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.02pc3rz021tzad14vr2bw0pdai8f' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:X51291:no:A1:X51291:0' header='yes' outcome='2'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='City' ordinal='8' />
                    <column datatype='string' name='State' ordinal='9' />
                    <column datatype='string' name='Country' ordinal='10' />
                    <column datatype='string' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Market' ordinal='12' />
                    <column datatype='string' name='Region' ordinal='13' />
                    <column datatype='string' name='Product ID' ordinal='14' />
                    <column datatype='string' name='Category' ordinal='15' />
                    <column datatype='string' name='Sub-Category' ordinal='16' />
                    <column datatype='string' name='Product Name' ordinal='17' />
                    <column datatype='real' name='Sales' ordinal='18' />
                    <column datatype='integer' name='Quantity' ordinal='19' />
                    <column datatype='real' name='Discount' ordinal='20' />
                    <column datatype='real' name='Profit' ordinal='21' />
                    <column datatype='real' name='Shipping Cost' ordinal='22' />
                    <column datatype='string' name='Order Priority' ordinal='23' />
                  </columns>
                </relation>
                <relation connection='excel-direct.02pc3rz021tzad14vr2bw0pdai8f' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:C1174:no:A1:C1174:0' header='yes' outcome='2'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='string' name='Market' ordinal='2' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_66B8CE77C1754817A5CFB6F254D1B1DD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Returns by Market Segment' type='sheet' worksheet='Count returned by Country (MAP)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Returns by Market Segment' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_83AE91AFE2AB475B8FA4C465C4DF8DBB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Count of returned by Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Count of Sub-category returned by market'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'><![CDATA[Count of Sub-category returns for <]]></run>
            <run bold='true' fontalignment='1'>[federated.1huw5pb0unamro14w52za0x5a1tz].[Category]</run>
            <run bold='true' fontalignment='1'>&gt; in &lt;</run>
            <run bold='true' fontalignment='1'>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</run>
            <run bold='true' fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
          </datasources>
          <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-action-filter='[Action2_83AE91AFE2AB475B8FA4C465C4DF8DBB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]</rows>
        <cols>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{46C1967D-1624-43F9-A904-B0606580D329}' />
    </worksheet>
    <worksheet name='Count of returned by Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Count of returned by products Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
          </datasources>
          <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]</rows>
        <cols>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{675F25CB-E2C4-4751-BBCF-18B0D3957895}' />
    </worksheet>
    <worksheet name='Count of returns by market and ship mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Count of returns by market and ship mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
          </datasources>
          <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Market (Returns)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market (Returns)]' derivation='None' name='[none:Market (Returns):nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[Action (Country)]'>
            <groupfilter function='level-members' level='[Country]' user:ui-action-filter='[Action1_66B8CE77C1754817A5CFB6F254D1B1DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market (Returns):nk]'>
            <groupfilter function='level-members' level='[none:Market (Returns):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Ship Mode:nk]'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market (Returns):nk]</column>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Ship Mode:nk]</column>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1huw5pb0unamro14w52za0x5a1tz].[sum:Quantity:qk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1huw5pb0unamro14w52za0x5a1tz].[none:Ship Mode:nk] * [federated.1huw5pb0unamro14w52za0x5a1tz].[sum:Quantity:qk])</rows>
        <cols>([federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market (Returns):nk] / [federated.1huw5pb0unamro14w52za0x5a1tz].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{2C2990F9-A795-4894-BC69-C1B004DE00D0}' />
    </worksheet>
    <worksheet name='Count returned by Country (MAP)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Count returned by Country (MAP)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' />
              <lod column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]' />
              <geometry column='[federated.1huw5pb0unamro14w52za0x5a1tz].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1huw5pb0unamro14w52za0x5a1tz].[Latitude (generated)]</rows>
        <cols>[federated.1huw5pb0unamro14w52za0x5a1tz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3FAF1C4D-D748-444D-9650-3541AAE9115F}' />
    </worksheet>
    <worksheet name='Returns in EU'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Returns in EU</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
          </datasources>
          <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Market:nk]' member='&quot;EMEA&quot;' />
              <groupfilter function='member' level='[none:Market:nk]' member='&quot;EU&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</column>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]</rows>
        <cols>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{9246AAFB-E465-4B1A-AC91-B9DF3D92C0CE}' />
    </worksheet>
    <worksheet name='Returns in EU (MAP)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Returns in EU</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Market:nk]' member='&quot;EMEA&quot;' />
              <groupfilter function='member' level='[none:Market:nk]' member='&quot;EU&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</column>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]' />
              <color column='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' />
              <geometry column='[federated.1huw5pb0unamro14w52za0x5a1tz].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1huw5pb0unamro14w52za0x5a1tz].[Latitude (generated)]</rows>
        <cols>[federated.1huw5pb0unamro14w52za0x5a1tz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B5E36041-7F8F-40D2-A118-04ACEAB2A820}' />
    </worksheet>
    <worksheet name='Returns in FR)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Returns in EU</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Market:nk]' member='&quot;EMEA&quot;' />
              <groupfilter function='member' level='[none:Market:nk]' member='&quot;EU&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</column>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</column>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]</column>
            <column>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1huw5pb0unamro14w52za0x5a1tz].[Longitude (generated)]' field-type='quantitative' max='1790649.8588664141' min='-1086887.7597261341' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1huw5pb0unamro14w52za0x5a1tz].[Latitude (generated)]' field-type='quantitative' max='6812461.8830910586' min='5115924.627629783' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' />
              <lod column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]' />
              <lod column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:City:nk]' />
              <color column='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]' />
              <size column='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1huw5pb0unamro14w52za0x5a1tz].[Latitude (generated)]</rows>
        <cols>[federated.1huw5pb0unamro14w52za0x5a1tz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FB5AECDE-5AFF-403B-A235-646FE689BF3B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
      </datasources>
      <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
        <column datatype='string' name='[Market]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='7' param='horz' type-v2='layout-flow' w='99004' x='498' y='978'>
            <zone h='98044' id='5' type-v2='layout-basic' w='89054' x='498' y='978'>
              <zone h='49022' id='3' name='Count of Sub-category returned by market' w='89054' x='498' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='11' name='Count of returned by Category' w='89054' x='498' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98044' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9950' x='89552' y='978'>
              <zone h='8557' id='8' mode='checkdropdown' name='Count of Sub-category returned by market' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Region:nk]' type-v2='filter' w='9950' x='89552' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8557' id='9' mode='checkdropdown' name='Count of Sub-category returned by market' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]' type-v2='filter' w='9950' x='89552' y='9535'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13325' id='10' name='Count of Sub-category returned by market' pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]' type-v2='color' w='9950' x='89552' y='18092'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='12' param='vert' type-v2='layout-flow' w='99004' x='498' y='978'>
                <zone fixed-size='280' h='49022' id='11' is-fixed='true' name='Count of returned by Category' w='89054' x='498' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8557' id='8' mode='checkdropdown' name='Count of Sub-category returned by market' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Region:nk]' type-v2='filter' w='9950' x='89552' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8557' id='9' mode='checkdropdown' name='Count of Sub-category returned by market' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]' type-v2='filter' w='9950' x='89552' y='9535'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='3' is-fixed='true' name='Count of Sub-category returned by market' w='89054' x='498' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13325' id='10' name='Count of Sub-category returned by market' pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]' type-v2='color' w='9950' x='89552' y='18092'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CB22F274-E9AA-4A42-9A1C-911DAEE9B5AC}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Returns by Market Segment'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Orders+ (GlobalSuperstore)' name='federated.1huw5pb0unamro14w52za0x5a1tz' />
      </datasources>
      <datasource-dependencies datasource='federated.1huw5pb0unamro14w52za0x5a1tz'>
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='7' param='horz' type-v2='layout-flow' w='99004' x='498' y='978'>
            <zone h='98044' id='5' type-v2='layout-basic' w='89054' x='498' y='978'>
              <zone h='49022' id='3' name='Count of returns by market and ship mode' show-title='false' w='89054' x='498' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='10' name='Count returned by Country (MAP)' show-title='false' w='89054' x='498' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98044' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9950' x='89552' y='978'>
              <zone h='21394' id='8' name='Count of returns by market and ship mode' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Ship Mode:nk]' type-v2='filter' w='9950' x='89552' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9902' id='11' name='Count returned by Country (MAP)' pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' type-v2='color' w='9950' x='89552' y='22372'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='12' param='vert' type-v2='layout-flow' w='99004' x='498' y='978'>
                <zone fixed-size='280' h='49022' id='10' is-fixed='true' name='Count returned by Country (MAP)' show-title='false' w='89054' x='498' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9902' id='11' name='Count returned by Country (MAP)' pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' type-v2='color' w='9950' x='89552' y='22372'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21394' id='8' mode='checkdropdown' name='Count of returns by market and ship mode' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Ship Mode:nk]' type-v2='filter' w='9950' x='89552' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='3' is-fixed='true' name='Count of returns by market and ship mode' show-title='false' w='89054' x='498' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EAE0E514-23E6-4F20-B745-A617D8B97637}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Count of returns by market and ship mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Ship Mode:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market (Returns):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market (Returns):nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Returned:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Segment:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89B27CDE-2710-4FE4-B7C2-D65CE0A71A8A}' />
    </window>
    <window class='worksheet' name='Count returned by Country (MAP)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E017248-DFB8-4469-9FB3-DE9F759A58AA}' />
    </window>
    <window class='dashboard' name='Returns by Market Segment'>
      <viewpoints>
        <viewpoint name='Count of returns by market and ship mode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Count returned by Country (MAP)'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{6AD56910-78F9-4726-819A-9974A487C9F4}' />
    </window>
    <window class='worksheet' name='Count of returned by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]</field>
                  <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>903</value>
                <value>&quot;Office Supplies&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Returned:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{232A8BF0-F50A-465C-94E4-91BEA54352CB}' />
    </window>
    <window class='worksheet' name='Count of Sub-category returned by market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Region:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Region:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Returned:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Ship Mode:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6108496-B5D6-4A4F-912A-B4E2A198F0B1}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Count of Sub-category returned by market'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Count of returned by Category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{26451852-6A52-4A54-87D4-D1640FC1D4BB}' />
    </window>
    <window class='worksheet' name='Returns in EU'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Region:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Returned:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Segment:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB9C1027-FB99-4CB7-A087-F1532D0D2D96}' />
    </window>
    <window class='worksheet' maximized='true' name='Returns in EU (MAP)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Country:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Region:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Returned:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Segment:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5294CB3A-FB8A-41F0-B4B6-C8B4F24DB067}' />
    </window>
    <window class='worksheet' name='Returns in FR)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1huw5pb0unamro14w52za0x5a1tz].[cnt:Returned:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Category:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:City:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Market:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Region:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Returned:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Segment:nk]</field>
            <field>[federated.1huw5pb0unamro14w52za0x5a1tz].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9759049C-4E9F-41E9-92CF-E9708917D93D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Count of Sub-category returned by market' width='192'>
      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
      r7FwYYHYOiQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Count of returned by Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Count of returns by market and ship mode' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Count returned by Country (MAP)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Returns by Market Segment' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Returns in EU' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Returns in EU (MAP)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Returns in FR)' width='192'>
      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
      +dJZ+AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
